[{"path":"https://biocro.github.io/BioCroField/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 BioCroField authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://biocro.github.io/BioCroField/articles/handling_biomass_measurements.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Handling Biomass Measurements","text":"BioCroField package includes several features related processing raw data biomass harvests, ultimate goal producing values useful context crop growth modeling. particular, package includes following: crop harvest record sheet can used field record relevant data. R function accepts information crop harvest record sheet stores convenient data structure. Additional R functions calculate key variables raw measurements reorganize results convenient format. Together, features provide straightforward system obtaining data creating full record analysis. collecting measuring plant material, complete description data can created follows: Store images completed crop harvest record sheets directory. Store commands used digitize process data (ones Full Example section document) R script directory. Save final biomass data table plain-text file directory using write.csv. Now final biomass values available simple CSV format, exact steps taken analyze data clear anyone looks directory future, including ! Even though details immediately apparent script, documentation functions BioCroField describe calculations made. rest document explains types biomass measurements important context crop growth modeling (Biomass Leaf Area section), general steps required make measurements (Making Measurements section), BioCroField can used process resulting measurements (Using BioCroField section). final section (Full Example) shows realistic example functions BioCroField can used process full biomass data set field season. Throughout document, provide several examples R commands. examples use functions BioCroField lattice R packages, must loaded first using commands following: lattice package installed R setup, can install typing install.packages('lattice').","code":"# Load required packages library(BioCroField) library(lattice)"},{"path":"https://biocro.github.io/BioCroField/articles/handling_biomass_measurements.html","id":"biomass-and-leaf-area","dir":"Articles","previous_headings":"","what":"Biomass and Leaf Area","title":"Handling Biomass Measurements","text":"farmers crop scientists want compare productivity different fields varieties, use quantity called yield, can defined amount harvested material per unit area. loose flexible definition; type harvested material depends particular crop question; amount can specified volume, weight, mass; several systems units customarily used different locations around world. Nevertheless, yield proven useful concept, least partially intrinsic property depend size field crops grown. interesting note harvested material per plant far less useful. crops grown higher densities, competition plants increases, plant tends produce less output. Thus, harvest per plant depends crop’s inhererent productivity also degree competition plants. hand, often fairly wide range plant population (number plants per unit area) can result identical similar yield; example, maize Illinois sown April 5 May 5 can reach 97% higher maximum yield populations 24,000 36,000 plants per acre Nafziger (1994). Thus, circumstances, yield (per area basis) better reflects true productivity crop without complicating influence competition. context crop growth modeling, typically interested predicting yield (mass per unit area) particular crop variety particular location. , however, generally necessary predict amount plant components (masses per unit area), following: Leaf: amount leaf mass determines amount carbon crop able assimilate process photosynthesis, leaf mass critical calculating growth rates. Root: amount root mass determines amount water nitrogen crop able obtain soil. Litter: crop ages, begins lose tissue process senescence. lost mass recycled parts plant, remainder shed, forming litter. competing processes growth senescence determine masses components like leaf root. Total: Besides components mentioned , crop also uses carbon grow stem reproductive material like flowers pods. accurate predictions, essential accurately model distribution carbon throughout crop components. Therefore, validate crop model, important experimental measurements crop components, ideally multiple times throughout growing season. addition masses, critical measure leaf area index (LAI), defined leaf area per unit ground area, also plays key role simulating photosynthesis canopy level. model able reproduce mass leaf area measurements, can faith able make accurate yield predictions situations.","code":""},{"path":"https://biocro.github.io/BioCroField/articles/handling_biomass_measurements.html","id":"making-measurements","dir":"Articles","previous_headings":"","what":"Making Measurements","title":"Handling Biomass Measurements","text":"make measurements important quantities, necessary sow multiple plots harvest plants single randomly-chosen plot several times throughout growing season, ending final harvest. plot also contain wire mesh litter trap known area, harvest generally include following steps: Choose section row known length; count plants contained row section; cut stem just ground; collect -ground portions plant bag dried weighed. can provide estimates population, -ground biomass (AGB) per unit area, AGB per plant. measurement, length row containing approximately 1-4 dozen plants (depending size spacing) used. Choose smaller number sequential plants (often half dozen); cut stem just ground; dig clean roots plants; split -ground portions plants components stem, living leaves, senesced leaves still attached plant, reproductive parts like flowers pods; collect separate component bag dried weighed. Combined AGB measurements , process can provide estimates mass per area partitioned component. also provides second estimate AGB per plant can compared one determined previous step determine whether plants chosen paritioning representative plot whole. Measure total area living leaves partitioned previous step. process can provide estimate specific leaf area (SLA), defined leaf area per leaf mass. SLA leaf mass per unit area determined previous step can used estimate LAI. Collect litter fallen litter trap put bag dried weighed. Combined senesced material still attached plant, can provide estimate litter formed process senescence. Note importance drying collected tissue weighing. wet weight can vary greatly throughout day give accurate reflection amount material truly incorporated structure crop. instance, two meters freshly cut sorghum plants often weighs two meters freshly cut maize plants, maize often heavier drying sorghum retains water stems.","code":""},{"path":[]},{"path":"https://biocro.github.io/BioCroField/articles/handling_biomass_measurements.html","id":"crop-harvest-record-sheets","dir":"Articles","previous_headings":"Using BioCroField","what":"Crop Harvest Record Sheets","title":"Handling Biomass Measurements","text":"BioCroField R package includes carefully designed crop harvest record sheet includes clearly-labeled blank areas recording harvest information described . sheet represents harvest one plot one time. Using sheets field help stay organized, make sure data organized way facilitate later analysis. record sheet can accessed R using access_sheet function BioCroField follows: sheet also available via BioCroField GitHub website. using sheet, recommended electronically fill fields whose values known beforehand (location, year, row spacing, name, contact) print necessary number paper copies need throughout field season.","code":"access_sheet('harvest')"},{"path":"https://biocro.github.io/BioCroField/articles/handling_biomass_measurements.html","id":"digitizing-data","dir":"Articles","previous_headings":"Using BioCroField","what":"Digitizing Data","title":"Handling Biomass Measurements","text":"harvest_point function BioCroField designed digitize data one crop harvest record sheets. names input arguments function generally match fields present crop harvest record sheets, making simple straighforward transfer values sheet computer. output function harvest_point object represents information sheet. technical point view, harvest_point object just R list particular set named elements. information available via built-help system typing ?harvest_point R terminal.","code":""},{"path":"https://biocro.github.io/BioCroField/articles/handling_biomass_measurements.html","id":"processing-and-organizing-data","dir":"Articles","previous_headings":"Using BioCroField","what":"Processing and Organizing Data","title":"Handling Biomass Measurements","text":"data one harvest record sheets stored equal number harvest_point objects, possible convert raw weights, lengths, areas convenient values like biomass per unit area leaf area index. can done automatically using process function BioCroField, processes single harvest_point object convert information useful form. output process harvest_point object additional named elements represent newly calculated values. information available via built-help system typing ?process R terminal. data one harvest record sheets processed, can reorganized data.frame, often convenient way store use data. can done using biomass_table function BioCroField, accepts multiple harvest_point objects, extracts important information one, stores information one row data.frame. data format, can also easily saved file using write.csv function base R. information available via built-help system typing ?biomass_table R terminal.","code":""},{"path":"https://biocro.github.io/BioCroField/articles/handling_biomass_measurements.html","id":"including-seed-mass","dir":"Articles","previous_headings":"Using BioCroField","what":"Including Seed Mass","title":"Handling Biomass Measurements","text":"often useful include information seeds originally sown, sowing date initial biomass per unit area field, even though truly “harvest” information. details can included biomass data table (created biomass_table) using add_seed_biomass function BioCroField. information available via built-help system typing ?add_seed_biomass R terminal.","code":""},{"path":"https://biocro.github.io/BioCroField/articles/handling_biomass_measurements.html","id":"a-full-example","dir":"Articles","previous_headings":"","what":"A Full Example","title":"Handling Biomass Measurements","text":"section, provide example biomass data three separate harvests combined table along information initial seed mass. Note: real data, “GM4000” real soybean variety, although values reasonable typical commercial soybean cultivar. Now can take look final data values: also easy graph :  Optionally, final biomass table can saved CSV file R data file; one commands included processing script:","code":"# Specify some pieces of information that are the same for all harvests crop <- 'soybean' variety <- 'GM4000' location <- 'UIUC' year <- 2022 hour <- 12 agb_row_length <- 2 row_spacing <- 0.7 trap_area <- 0.2 partitioning_nplants <- 6  # Store the measured data values as a list of harvest_point objects biomass_measurements <- list(   harvest_point(     crop = crop,     variety = variety,     location = location,     plot = 2,     year = year,     doy = 185,     hour = hour,     row_spacing = row_spacing,     partitioning_leaf_area = 500,     partitioning_component_weights = list(leaf = 2.5, stem = 1.5, root = 1.4),     agb_components = c('leaf', 'stem'),     agb_row_length = agb_row_length,     agb_weight = 50,     trap_area = trap_area,     trap_component_weights = list(),     partitioning_nplants = partitioning_nplants,     agb_nplants = 46   ),   harvest_point(     crop = crop,     variety = variety,     location = location,     plot = 3,     year = year,     doy = 235,     hour = hour,     row_spacing = row_spacing,     partitioning_leaf_area = 9000,     partitioning_component_weights = list(leaf = 35, stem = 55, root = 15, pod = 30),     agb_components = c('leaf', 'stem', 'pod'),     agb_row_length = agb_row_length,     agb_weight = 1100,     trap_area = trap_area,     trap_component_weights = list(leaf_litter = 3.2, stem_litter = 1.5),     partitioning_nplants = partitioning_nplants,     agb_nplants = 47   ),   harvest_point(     crop = crop,     variety = variety,     location = location,     plot = 1,     year = year,     doy = 275,     hour = hour,     row_spacing = row_spacing,     partitioning_leaf_area = 0,     partitioning_component_weights = list(leaf = 0, stem = 40, root = 13, pod = 175, seed = 130),     agb_components = c('leaf', 'stem', 'pod'),     agb_row_length = agb_row_length,     agb_weight = 1000,     trap_area = trap_area,     trap_component_weights = list(leaf_litter = 45, stem_litter = 15),     partitioning_nplants = partitioning_nplants,     agb_nplants = 51   ) )  # Convert measured values into masses per area in BioCro units processed_biomass_measurements <- lapply(biomass_measurements, process)  # Specify mass values that should be set to zero when not explicitly measured zero_when_missing <- c('pod', 'leaf_litter', 'stem_litter')  # Reorganize values into a data frame soybean_biomass <- do.call(   biomass_table,   c(processed_biomass_measurements, list(zero_when_missing = zero_when_missing)) )  # Add the initial values to the data frame soybean_biomass <- add_seed_biomass(   soybean_biomass,   year = year,   doy = 152,   hour = hour,   seed_mass = 0.17,   planting_density = 150000,   zero_when_missing = zero_when_missing ) str(soybean_biomass) #> 'data.frame':    4 obs. of  20 variables: #>  $ crop                      : chr  \"soybean\" \"soybean\" \"soybean\" \"soybean\" #>  $ variety                   : chr  \"GM4000\" \"GM4000\" \"GM4000\" \"GM4000\" #>  $ location                  : chr  \"UIUC\" \"UIUC\" \"UIUC\" \"UIUC\" #>  $ plot                      : num  NA 2 3 1 #>  $ year                      : num  2022 2022 2022 2022 #>  $ doy                       : num  152 185 235 275 #>  $ hour                      : num  12 12 12 12 #>  $ time                      : num  152 186 236 276 #>  $ leaf                      : num  0.0504 0.2232 2.2917 0 #>  $ stem                      : num  0.0063 0.1339 3.6012 1.3289 #>  $ root                      : num  0.0063 0.125 0.9821 0.4319 #>  $ pod                       : num  0 0 1.96 5.81 #>  $ leaf_litter               : num  0 0 0.16 2.25 #>  $ stem_litter               : num  0 0 0.075 0.75 #>  $ seed                      : num  NA NA NA 4.32 #>  $ LAI                       : num  0 0.446 5.893 0 #>  $ SLA                       : num  NA 2 2.57 NA #>  $ agb_per_plant_row         : num  NA 1.09 23.4 19.61 #>  $ agb_per_plant_partitioning: num  NA 0.667 20 35.833 #>  $ population                : num  NA 132973 135864 147426 xyplot(   leaf + stem + root + pod + leaf_litter + stem_litter ~ doy,   data = soybean_biomass,   type = 'b',   pch = 16,   auto = TRUE,   grid = TRUE,   xlab = 'Day of year (2022)',   ylab = 'Biomass (Mg / ha)' ) # Save the data as an R data file save(soybean_biomass, file = 'soybean_biomass.RData')  # Save the data as a CSV file write.csv(soybean_biomass, file = 'soybean_biomass.csv', row.names = FALSE)"},{"path":[]},{"path":"https://biocro.github.io/BioCroField/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Edward B. Lochocki. Maintainer, author. BioCroField authors. Copyright holder.","code":""},{"path":"https://biocro.github.io/BioCroField/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lochocki E (2023). BioCroField: Tools BioCro Field Data. https://github.com/BioCro/BioCroField, https://biocro.github.io/BioCroField/.","code":"@Manual{,   title = {BioCroField: Tools for BioCro Field Data},   author = {Edward B. Lochocki},   year = {2023},   note = {https://github.com/BioCro/BioCroField, https://biocro.github.io/BioCroField/}, }"},{"path":"https://biocro.github.io/BioCroField/index.html","id":"biocrofield","dir":"","previous_headings":"","what":"BioCroField","title":"Tools for BioCro Field Data","text":"BioCroField collection tools processing field data related BioCro crop growth simulations. package work progress. development proceeds, functions subject modification removal without notice.","code":""},{"path":"https://biocro.github.io/BioCroField/index.html","id":"installing-the-r-package","dir":"","previous_headings":"BioCroField","what":"Installing the R Package","title":"Tools for BioCro Field Data","text":"easiest way install BioCroField type following within R terminal: Note method requires remotes package, can installed within R typing install.packages('remotes').","code":"remotes::install_github('BioCro/BioCroField')"},{"path":"https://biocro.github.io/BioCroField/index.html","id":"learning-to-use-biocrofield","dir":"","previous_headings":"BioCroField","what":"Learning to Use BioCroField","title":"Tools for BioCro Field Data","text":"best way learn using BioCroField visit BioCroField website website includes documentation functions data sets included package, well articles describe general features several important use cases.","code":""},{"path":"https://biocro.github.io/BioCroField/index.html","id":"license","dir":"","previous_headings":"BioCroField","what":"License","title":"Tools for BioCro Field Data","text":"BioCroField R package, documentation, associated example scripts licensed MIT license.","code":""},{"path":"https://biocro.github.io/BioCroField/reference/access_sheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Access a built-in data record sheet — access_sheet","title":"Access a built-in data record sheet — access_sheet","text":"convenience function accessing data record sheets included   BioCroField R package.","code":""},{"path":"https://biocro.github.io/BioCroField/reference/access_sheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access a built-in data record sheet — access_sheet","text":"","code":"access_sheet(sheet_name, sheet_type = 'pdf', open_sheet = TRUE)"},{"path":"https://biocro.github.io/BioCroField/reference/access_sheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access a built-in data record sheet — access_sheet","text":"sheet_name base name sheet opened. sheet_type file type sheet opened. open_sheet logical value indicating whether open sheet.","code":""},{"path":"https://biocro.github.io/BioCroField/reference/access_sheet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Access a built-in data record sheet — access_sheet","text":"selected record sheet automatically opened appropriate   application open_sheet set TRUE. following options available sheet_name: 'harvest': data record sheet recording information           crop harvest. following opetions avaialable sheet_type: 'word': locatate /open Microsoft Word version           sheet. 'pdf': locate /open PDF version sheet.","code":""},{"path":"https://biocro.github.io/BioCroField/reference/access_sheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access a built-in data record sheet — access_sheet","text":"full path specified file.","code":""},{"path":"https://biocro.github.io/BioCroField/reference/access_sheet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access a built-in data record sheet — access_sheet","text":"","code":"# Get the full path to the MS Word version of the harvest data sheet access_sheet('harvest', sheet_type = 'word', open_sheet = FALSE) #> [1] \"/home/runner/work/_temp/Library/BioCroField/data_record_sheets/harvest.docx\"  # Open the PDF version of the harvest data sheet if (FALSE) {  access_sheet('harvest') }"},{"path":"https://biocro.github.io/BioCroField/reference/add_seed_biomass.html","id":null,"dir":"Reference","previous_headings":"","what":"Initial biomass from seed information — add_seed_biomass","title":"Initial biomass from seed information — add_seed_biomass","text":"-: provide description, arguments, details .","code":""},{"path":"https://biocro.github.io/BioCroField/reference/add_seed_biomass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initial biomass from seed information — add_seed_biomass","text":"","code":"add_seed_biomass(     biomass_df,     year,     doy,     hour,     seed_mass,     planting_density,     zero_when_missing = c(),     component_fractions = list(leaf = 0.8, stem = 0.1, root = 0.1)   )"},{"path":"https://biocro.github.io/BioCroField/reference/add_seed_biomass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initial biomass from seed information — add_seed_biomass","text":"biomass_df data frame assumed created biomass_table.","code":""},{"path":"https://biocro.github.io/BioCroField/reference/add_seed_biomass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initial biomass from seed information — add_seed_biomass","text":"Blah","code":""},{"path":"https://biocro.github.io/BioCroField/reference/add_seed_biomass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initial biomass from seed information — add_seed_biomass","text":"data frame described .","code":""},{"path":"https://biocro.github.io/BioCroField/reference/add_seed_biomass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initial biomass from seed information — add_seed_biomass","text":"","code":"hp <- harvest_point(   crop = 'soybean',   variety = 'ld11',   location = 'energy farm',   plot = 1,   year = 2023,   doy = 186,   hour = 12,   row_spacing = 0.7,   partitioning_leaf_area = 500,   partitioning_component_weights = list(leaf = 2.5, stem = 1.5, root = 1.4),   agb_components = c('leaf', 'stem'),   agb_row_length = 2,   agb_weight = 50,   trap_area = 0.185,   trap_component_weights = list(leaf_litter = 0.4, stem_litter = 0.5),   partitioning_nplants = 6,   agb_nplants = 50 )  hpp <- process(hp)  biomass <- biomass_table(hpp, hpp)  biomass <- add_seed_biomass(   biomass,   year = 2023,   doy = 152,   hour = 12,   seed_mass = 0.17,   planting_density = 125000 )  str(biomass) #> 'data.frame':\t3 obs. of  18 variables: #>  $ crop                      : chr  \"soybean\" \"soybean\" \"soybean\" #>  $ variety                   : chr  \"ld11\" \"ld11\" \"ld11\" #>  $ location                  : chr  \"energy farm\" \"energy farm\" \"energy farm\" #>  $ plot                      : num  NA 1 1 #>  $ year                      : num  2023 2023 2023 #>  $ doy                       : num  152 186 186 #>  $ hour                      : num  12 12 12 #>  $ time                      : num  152 186 186 #>  $ leaf                      : num  0.042 0.223 0.223 #>  $ stem                      : num  0.00525 0.13393 0.13393 #>  $ root                      : num  0.00525 0.125 0.125 #>  $ leaf_litter               : num  NA 0.0216 0.0216 #>  $ stem_litter               : num  NA 0.027 0.027 #>  $ LAI                       : num  0 0.446 0.446 #>  $ SLA                       : num  NA 2 2 #>  $ agb_per_plant_row         : num  NA 1 1 #>  $ agb_per_plant_partitioning: num  NA 0.667 0.667 #>  $ population                : num  NA 144536 144536"},{"path":"https://biocro.github.io/BioCroField/reference/biomass_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Process raw biomass data from one harvest — biomass_table","title":"Process raw biomass data from one harvest — biomass_table","text":"-: provide description, arguments, details .","code":""},{"path":"https://biocro.github.io/BioCroField/reference/biomass_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process raw biomass data from one harvest — biomass_table","text":"","code":"biomass_table(..., zero_when_missing = c())    # S3 method for harvest_point biomass_table(..., zero_when_missing = c())"},{"path":"https://biocro.github.io/BioCroField/reference/biomass_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process raw biomass data from one harvest — biomass_table","text":"... One harvest_point objects.","code":""},{"path":"https://biocro.github.io/BioCroField/reference/biomass_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process raw biomass data from one harvest — biomass_table","text":"Blah","code":""},{"path":"https://biocro.github.io/BioCroField/reference/biomass_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process raw biomass data from one harvest — biomass_table","text":"data.frame described .","code":""},{"path":[]},{"path":"https://biocro.github.io/BioCroField/reference/biomass_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process raw biomass data from one harvest — biomass_table","text":"","code":"hp <- harvest_point(   crop = 'soybean',   variety = 'ld11',   location = 'energy farm',   plot = 1,   year = 2023,   doy = 186,   hour = 12,   row_spacing = 0.7,   partitioning_leaf_area = 500,   partitioning_component_weights = list(leaf = 2.5, stem = 1.5, root = 1.4),   agb_components = c('leaf', 'stem'),   agb_row_length = 2,   agb_weight = 50,   trap_area = 0.185,   trap_component_weights = list(leaf_litter = 0.4, stem_litter = 0.5),   partitioning_nplants = 6,   agb_nplants = 50 )  hpp <- process(hp)  biomass <- biomass_table(hpp, hpp)  str(biomass) #> 'data.frame':\t2 obs. of  18 variables: #>  $ crop                      : chr  \"soybean\" \"soybean\" #>  $ variety                   : chr  \"ld11\" \"ld11\" #>  $ location                  : chr  \"energy farm\" \"energy farm\" #>  $ plot                      : num  1 1 #>  $ year                      : num  2023 2023 #>  $ doy                       : num  186 186 #>  $ hour                      : num  12 12 #>  $ time                      : num  186 186 #>  $ leaf                      : num  0.223 0.223 #>  $ stem                      : num  0.134 0.134 #>  $ root                      : num  0.125 0.125 #>  $ leaf_litter               : num  0.0216 0.0216 #>  $ stem_litter               : num  0.027 0.027 #>  $ LAI                       : num  0.446 0.446 #>  $ SLA                       : num  2 2 #>  $ agb_per_plant_row         : num  1 1 #>  $ agb_per_plant_partitioning: num  0.667 0.667 #>  $ population                : num  144536 144536"},{"path":"https://biocro.github.io/BioCroField/reference/harvest_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Biomass data from one harvest — harvest_point","title":"Biomass data from one harvest — harvest_point","text":"-: provide description, arguments, details .","code":""},{"path":"https://biocro.github.io/BioCroField/reference/harvest_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biomass data from one harvest — harvest_point","text":"","code":"harvest_point(     crop,     variety,     location,     plot,     year,     doy,     hour,     row_spacing,     partitioning_leaf_area,     partitioning_component_weights,     agb_components,     agb_row_length,     agb_weight,     trap_area,     trap_component_weights,     partitioning_nplants = NA,     agb_nplants = NA,     ...   )"},{"path":"https://biocro.github.io/BioCroField/reference/harvest_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Biomass data from one harvest — harvest_point","text":"... additional arguments pass list creating     harvest_point object.","code":""},{"path":"https://biocro.github.io/BioCroField/reference/harvest_point.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Biomass data from one harvest — harvest_point","text":"Blah","code":""},{"path":"https://biocro.github.io/BioCroField/reference/harvest_point.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Biomass data from one harvest — harvest_point","text":"harvest_point object described .","code":""},{"path":"https://biocro.github.io/BioCroField/reference/harvest_point.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Biomass data from one harvest — harvest_point","text":"","code":"hp <- harvest_point(   crop = 'soybean',   variety = 'ld11',   location = 'energy farm',   plot = 1,   year = 2023,   doy = 186,   hour = 12,   row_spacing = 0.7,   partitioning_leaf_area = 500,   partitioning_component_weights = list(leaf = 2.5, stem = 1.5, root = 1.4),   agb_components = c('leaf', 'stem'),   agb_row_length = 2,   agb_weight = 50,   trap_area = 0.185,   trap_component_weights = list(leaf_litter = 0.4, stem_litter = 0.5),   partitioning_nplants = 6,   agb_nplants = 50 )  str(hp) #> List of 17 #>  $ crop                          : chr \"soybean\" #>  $ variety                       : chr \"ld11\" #>  $ location                      : chr \"energy farm\" #>  $ plot                          : num 1 #>  $ year                          : num 2023 #>  $ doy                           : num 186 #>  $ hour                          : num 12 #>  $ row_spacing                   : num 0.7 #>  $ partitioning_nplants          : num 6 #>  $ partitioning_leaf_area        : num 500 #>  $ partitioning_component_weights:List of 3 #>   ..$ leaf: num 2.5 #>   ..$ stem: num 1.5 #>   ..$ root: num 1.4 #>  $ agb_components                : chr [1:2] \"leaf\" \"stem\" #>  $ agb_nplants                   : num 50 #>  $ agb_row_length                : num 2 #>  $ agb_weight                    : num 50 #>  $ trap_area                     : num 0.185 #>  $ trap_component_weights        :List of 2 #>   ..$ leaf_litter: num 0.4 #>   ..$ stem_litter: num 0.5 #>  - attr(*, \"class\")= chr [1:2] \"harvest_point\" \"list\""},{"path":"https://biocro.github.io/BioCroField/reference/is.harvest_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Is an object an harvest_point? — is.harvest_point","title":"Is an object an harvest_point? — is.harvest_point","text":"Checks whether object harvest_point object.","code":""},{"path":"https://biocro.github.io/BioCroField/reference/is.harvest_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is an object an harvest_point? — is.harvest_point","text":"","code":"is.harvest_point(x)"},{"path":"https://biocro.github.io/BioCroField/reference/is.harvest_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is an object an harvest_point? — is.harvest_point","text":"x R object.","code":""},{"path":"https://biocro.github.io/BioCroField/reference/is.harvest_point.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Is an object an harvest_point? — is.harvest_point","text":"function simply checks see 'harvest_point'   class(x).","code":""},{"path":"https://biocro.github.io/BioCroField/reference/is.harvest_point.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is an object an harvest_point? — is.harvest_point","text":"logical (TRUE / FALSE) value indicating whether object  harvest_point object.","code":""},{"path":[]},{"path":"https://biocro.github.io/BioCroField/reference/is.harvest_point.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is an object an harvest_point? — is.harvest_point","text":"","code":"hp <- harvest_point(   crop = 'soybean',   variety = 'ld11',   location = 'energy farm',   plot = 1,   year = 2023,   doy = 186,   hour = 12,   row_spacing = 0.7,   partitioning_leaf_area = 500,   partitioning_component_weights = list(leaf = 2.5, stem = 1.5, root = 1.4),   agb_components = c('leaf', 'stem'),   agb_row_length = 2,   agb_weight = 50,   trap_area = 0.185,   trap_component_weights = list(leaf_litter = 0.4, stem_litter = 0.5),   partitioning_nplants = 6,   agb_nplants = 50 )  is.harvest_point(hp) #> [1] TRUE"},{"path":"https://biocro.github.io/BioCroField/reference/process.html","id":null,"dir":"Reference","previous_headings":"","what":"Process raw biomass data from one harvest — process","title":"Process raw biomass data from one harvest — process","text":"-: provide description, arguments, details .","code":""},{"path":"https://biocro.github.io/BioCroField/reference/process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process raw biomass data from one harvest — process","text":"","code":"process(x)    # S3 method for harvest_point process(x)"},{"path":"https://biocro.github.io/BioCroField/reference/process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process raw biomass data from one harvest — process","text":"x harvest_point object.","code":""},{"path":"https://biocro.github.io/BioCroField/reference/process.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process raw biomass data from one harvest — process","text":"Blah","code":""},{"path":"https://biocro.github.io/BioCroField/reference/process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process raw biomass data from one harvest — process","text":"harvest_point object described .","code":""},{"path":[]},{"path":"https://biocro.github.io/BioCroField/reference/process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process raw biomass data from one harvest — process","text":"","code":"hp <- harvest_point(   crop = 'soybean',   variety = 'ld11',   location = 'energy farm',   plot = 1,   year = 2023,   doy = 186,   hour = 12,   row_spacing = 0.7,   partitioning_leaf_area = 500,   partitioning_component_weights = list(leaf = 2.5, stem = 1.5, root = 1.4),   agb_components = c('leaf', 'stem'),   agb_row_length = 2,   agb_weight = 50,   trap_area = 0.185,   trap_component_weights = list(leaf_litter = 0.4, stem_litter = 0.5),   partitioning_nplants = 6,   agb_nplants = 50 )  hpp <- process(hp)  str(hpp) #> List of 32 #>  $ crop                          : chr \"soybean\" #>  $ variety                       : chr \"ld11\" #>  $ location                      : chr \"energy farm\" #>  $ plot                          : num 1 #>  $ year                          : num 2023 #>  $ doy                           : num 186 #>  $ hour                          : num 12 #>  $ row_spacing                   : num 0.7 #>  $ partitioning_nplants          : num 6 #>  $ partitioning_leaf_area        : num 500 #>  $ partitioning_component_weights:List of 3 #>   ..$ leaf: num 2.5 #>   ..$ stem: num 1.5 #>   ..$ root: num 1.4 #>  $ agb_components                : chr [1:2] \"leaf\" \"stem\" #>  $ agb_nplants                   : num 50 #>  $ agb_row_length                : num 2 #>  $ agb_weight                    : num 50 #>  $ trap_area                     : num 0.185 #>  $ trap_component_weights        :List of 2 #>   ..$ leaf_litter: num 0.4 #>   ..$ stem_litter: num 0.5 #>  $ time                          : num 186 #>  $ partitioning_agb_weight       : num 4 #>  $ relative_components           :List of 3 #>   ..$ leaf: num 0.625 #>   ..$ stem: num 0.375 #>   ..$ root: num 0.35 #>  $ components_per_row            :List of 3 #>   ..$ leaf: num 15.6 #>   ..$ stem: num 9.38 #>   ..$ root: num 8.75 #>  $ components_per_area           :List of 3 #>   ..$ leaf: num 22.3 #>   ..$ stem: num 13.4 #>   ..$ root: num 12.5 #>  $ components_biocro             :List of 3 #>   ..$ leaf: num 0.223 #>   ..$ stem: num 0.134 #>   ..$ root: num 0.125 #>  $ LMA                           : num 50 #>  $ LAI                           : num 0.446 #>  $ SLA                           : num 2 #>  $ trap_components_per_area      :List of 2 #>   ..$ leaf_litter: num 2.16 #>   ..$ stem_litter: num 2.7 #>  $ trap_components_biocro        :List of 2 #>   ..$ leaf_litter: num 0.0216 #>   ..$ stem_litter: num 0.027 #>  $ all_components_biocro         :List of 5 #>   ..$ leaf       : num 0.223 #>   ..$ stem       : num 0.134 #>   ..$ root       : num 0.125 #>   ..$ leaf_litter: num 0.0216 #>   ..$ stem_litter: num 0.027 #>  $ agb_per_plant_partitioning    : num 0.667 #>  $ agb_per_plant_row             : num 1 #>  $ population                    : num 144536 #>  - attr(*, \"class\")= chr [1:2] \"harvest_point\" \"list\""},{"path":"https://biocro.github.io/BioCroField/news/index.html","id":"biocrofield-version-010","dir":"Changelog","previous_headings":"","what":"BioCroField VERSION 0.1.0","title":"BioCroField VERSION 0.1.0","text":"first version BioCroField. point, package state rapid development, changes described . reserving version 1.0.0 stable complete future release; , major changes increase minor version number.","code":""}]
